<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
    <link rel="stylesheet" href="stats.css">
    <title>Analytics</title>
</head>
<body>
    <div class="Sidebar">
        <a href="/annonce.html">
            <div><i class="uil uil-home"></i> Page d'accueil</div>
        </a>
        <a href="/dashboard">
            <div><i class="uil uil-list-ul"></i> Mes annonces</div>
        </a>
        <a href="/stats.html">
            <div><i class="uil uil-chart-bar"></i> Statistique</div>
        </a>
        <a href="/ListeMessage.html">
            <div><i class="uil uil-envelope"></i> Message</div>
        </a>
        <div class="Logout">
            <a href="/logout">
                <i class="uil uil-sign-out-alt"></i> DÃ©connexion
            </a>
        </div>
    </div>
    <div class="Container">
        <h1>Analytics</h1>
        <div class="box-container">
            <div class="box">
                <i class="uil uil-chart-pie-alt"></i>
                <div class="text">Total Annonces: <%= totalAnnonces %></div>
            </div>
            <div class="box">
                <i class="uil uil-eye"></i>
                <div class="text">Total Views: <%= totalViews %></div>
            </div>
            <div class="box">
                <i class="uil uil-eye"></i>
                <div class="text">Total message: <%= totalmessages %></div>
            </div>
        </div>
        <div class="analytics-container">
            <div class="analytics">
                <canvas id="annonceViewsChart"></canvas>
            </div>
            <div class="analytics">
                <canvas id="monthlyViewsChart"></canvas>
            </div>
            <div class="analytics">
                <canvas id="annoncesPerMonthChart"></canvas>
            </div>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const annonceViewsData = <%- JSON.stringify(annonceViews) %>;
        const monthlyViewsData = <%- JSON.stringify(monthlyViews) %>;
        const annoncesPerMonthData = <%- JSON.stringify(annoncesPerMonth) %>;

        // Setup data for Chart.js
        const annonceViewsChartCtx = document.getElementById('annonceViewsChart').getContext('2d');
new Chart(annonceViewsChartCtx, {
    type: 'bar',
    data: {
        labels: annonceViewsData.map(view => view.titre), // Use title here
        datasets: [{
            label: 'Annonce Views',
            data: annonceViewsData.map(view => view.count),
            backgroundColor: 'rgba(75, 192, 192, 0.2)',
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 1
        }]
    },
    options: {
        plugins: {
            legend: {
                labels: {
                    font: {
                        size: 10,
                        family: 'sans-serif'
                    },
                    color: '#333'
                }
            },
            tooltip: {
                callbacks: {
                    label: function(tooltipItem) {
                        return `Views: ${tooltipItem.raw}`;
                    }
                }
            }
        },
        scales: {
            x: {
                ticks: {
                    font: {
                        size: 14,
                        family: 'Poppins, sans-serif'
                    },
                    color: '#333'
                }
            },
            y: {
                ticks: {
                    font: {
                        size: 14,
                        family: 'Poppins, sans-serif'
                    },
                    color: '#333'
                },
                beginAtZero: true,
                ticks: {
                    stepSize: 1 // Define step size for the y-axis
                }
            }
        }
    }
});

const monthlyViewsChartCtx = document.getElementById('monthlyViewsChart').getContext('2d');
new Chart(monthlyViewsChartCtx, {
    type: 'line',
    data: {
        labels: monthlyViewsData.map(view => `${view._id.year}-${view._id.month}`),
        datasets: [{
            label: 'Monthly Views',
            data: monthlyViewsData.map(view => view.count),
            backgroundColor: 'rgba(153, 102, 255, 0.2)',
            borderColor: 'rgba(153, 102, 255, 1)',
            borderWidth: 1
        }]
    },
    options: {
        plugins: {
            legend: {
                labels: {
                    font: {
                        size: 16,
                        weight: 'bold',
                        family: 'Poppins, sans-serif'
                    },
                    color: '#333'
                }
            },
            tooltip: {
                callbacks: {
                    label: function(tooltipItem) {
                        return `Views: ${tooltipItem.raw}`;
                    }
                }
            }
        },
        scales: {
            x: {
                ticks: {
                    font: {
                        size: 14,
                        family: 'Poppins, sans-serif'
                    },
                    color: '#333'
                }
            },
            y: {
                ticks: {
                    font: {
                        size: 20,
                        family: 'Poppins, sans-serif'
                    },
                    color: '#333'
                },
                beginAtZero: true,
                ticks: {
                    stepSize: 1 // Define step size for the y-axis
                }
            }
        }
    }
});

const annoncesPerMonthChartCtx = document.getElementById('annoncesPerMonthChart').getContext('2d');
new Chart(annoncesPerMonthChartCtx, {
    type: 'bar',
    data: {
        labels: annoncesPerMonthData.map(annonce => `${annonce._id.year}-${annonce._id.month}`),
        datasets: [{
            label: 'Annonces Per Month',
            data: annoncesPerMonthData.map(annonce => annonce.count),
            backgroundColor: 'rgba(255, 159, 64, 0.2)',
            borderColor: 'rgba(255, 159, 64, 1)',
            borderWidth: 1
        }]
    },
    options: {
        plugins: {
            legend: {
                labels: {
                    font: {
                        size: 16,
                        weight: 'bold',
                        family: 'Poppins, sans-serif'
                    },
                    color: '#333'
                }
            },
            tooltip: {
                callbacks: {
                    label: function(tooltipItem) {
                        return `Annonces: ${tooltipItem.raw}`;
                    }
                }
            }
        },
        scales: {
            x: {
                ticks: {
                    font: {
                        size: 14,
                        family: 'Poppins, sans-serif'
                    },
                    color: '#333'
                }
            },
            y: {
                ticks: {
                    font: {
                        size: 14,
                        family: 'Poppins, sans-serif'
                    },
                    color: '#333'
                },
                beginAtZero: true,
                ticks: {
                    stepSize: 1 // Define step size for the y-axis
                }
            }
        }
    }
});

    </script>
    
</body>
</html>
